version: '3.7'
volumes:
  files:
    driver: local
  mysql:
    driver: local
  backup:
    driver: local
  redis:
    driver: local

services:

  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"  
      - "traefik.frontend.headers.SSLHost=portainer.${DOMAINNAME}"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.frameDeny=true"
      - "traefik.frontend.headers.customResponseHeaders=X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
  
  medusa:
    image: "linuxserver/medusa"
    restart: unless-stopped
    container_name: medusa
    ports:
      -  "8081:8081"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=medusa"
      - "traefik.frontend.rule=Host:tv.${DOMAINNAME}"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.port=8081"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.customResponseHeaders=X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
      - "traefik.frontend.headers.frameDeny=true"
    volumes: 
      - ${USERDIR}/docker/medusa:/config
      - ${MEDIADIR}/torrent/complete/tvshow:/downloads
      - ${MEDIADIR}/torrent/watch:/watch
      - ${MEDIADIR}/tvShow:/tv
      - ${MEDIADIR}/anime:/anime
      - ${USERDIR}/docker/shared:/shared

  couchpotato:
    image: "linuxserver/couchpotato"
    restart: unless-stopped
    container_name: couchpotato
    environment: 
      - "TZ=${TZ}"
    ports: 
    - "5050:5050"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=couchpotato"
      - "traefik.frontend.rule=Host:movie.${DOMAINNAME}"
      - "traefik.frontend.headers.SSLHost=movie.${DOMAINNAME}"
      - "traefik.port=5050"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.frameDeny=true"
      - "traefik.frontend.headers.customResponseHeaders=X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
    volumes: 
      - ${USERDIR}/docker/couchpotato:/config
      - ${MEDIADIR}/torrentCompleted:/downloads
      - ${MEDIADIR}/torrent/watch:/watch
      - ${MEDIADIR}/movie:/movie
      - ${USERDIR}/docker/shared:/shared

 # TransmissionBT - Torrent Downloader
# ONLY ACCESSIBLE THROUGH https://domain.com/transmission/web/ if using PathPrefix
  transmission-vpn:
    image: haugene/transmission-openvpn:latest
    container_name: transmission-vpn
    restart: unless-stopped
    networks:
      - traefik_proxy
      - default
    ports:
      - "$TRANSMISSION_PORT:9091"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - ${USERDIR}/docker/transmission-vpn/data:/data
      - ${USERDIR}/docker/transmission-vpn/config:/config
      - ${MEDIADIR}/torrent:/downloads
    environment:
      OPENVPN_PROVIDER: $VPN_PROVIDER
      OPENVPN_USERNAME: $NORDVPN_USERNAME
      OPENVPN_PASSWORD: $NORDVPN_PASSWORD
      NORDVPN_COUNTRY: $NORDVPN_COUNTRY
      NORDVPN_CATEGORY: $NORDVPN_CATEGORY
      NORDVPN_PROTOCOL: $NORDVPN_PROTOCOL
      OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
      LOCAL_NETWORK: "$LOCAL_NETWORK"
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
      TRANSMISSION_RPC_HOST_WHITELIST: "127.0.0.1,$SERVER_IP"
      TRANSMISSION_RPC_PASSWORD: $TRANSMISSION_RPC_PASSWORD
      TRANSMISSION_RPC_USERNAME: $TRANSMISSION_RPC_USERNAME
      TRANSMISSION_UMASK: 002
      TRANSMISSION_RATIO_LIMIT: 1.0
      TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
      TRANSMISSION_ALT_SPEED_DOWN: 4000
      TRANSMISSION_ALT_SPEED_ENABLED: "true"
      TRANSMISSION_ALT_SPEED_UP: 2000
      TRANSMISSION_SPEED_LIMIT_DOWN: 15000
      TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED: "true"
      TRANSMISSION_SPEED_LIMIT_UP: 10000
      TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
      TRANSMISSION_INCOMPLETE_DIR: /downloads/incomplete
      TRANSMISSION_INCOMPLETE_DIR_ENABLED: "true"
      TRANSMISSION_WATCH_DIR: /watch
      TRANSMISSION_WATCH_DIR_ENABLED: "true"
      TRANSMISSION_DOWNLOAD_DIR: /downloads/complete
    labels:
      traefik.enable: "true"
      traefik.backend: transmission-vpn
      traefik.protocol: http
      traefik.port: 9091
      traefik.frontend.rule: Host:torrent.$DOMAINNAME
      traefik.frontend.headers.SSLHost: torrent.$DOMAINNAME
      traefik.docker.network: traefik_proxy
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:$DOMAINNAME'

  # Bazarr - Subtitle Management
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "$BAZARR_PORT:6767"
    volumes:
      - $USERDIR/docker/bazarr:/config
      - /media:/nas
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      traefik.enable: "true"
      traefik.backend: bazarr
      traefik.protocol: http
      traefik.port: 6767
      traefik.frontend.rule: Host:subtitle.$DOMAINNAME
      traefik.frontend.headers.SSLHost: subtitle.$DOMAINNAME
      traefik.docker.network: traefik_proxy
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.customFrameOptionsValue: 'allow-from https:$DOMAINNAME'
      # traefik.frontend.auth.forward.address: "http://oauth:4181"
      # traefik.frontend.auth.forward.authResponseHeaders: X-Forwarded-User
      # traefik.frontend.auth.forward.trustForwardHeader: "true"

# FileBot - File renamer
  filebot:
    image: jlesage/filebot:latest
    container_name: filebot
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "$FILEBOT_PORT:5800"
    volumes:
      # A *.psm license file is required in /config
      # https://github.com/jlesage/docker-filebot#installing-a-license
      - $USERDIR/docker/filebot:/config
      - /media:/nas
      - $USERDIR/Downloads:/downloads
    environment:
      USER_ID: $PUID
      GROUP_ID: $PGID
      TZ: $TZ
      UMASK: 002
      KEEP_APP_RUNNING: 1
      CLEAN_TMP_DIR: 1
      DISPLAY_WIDTH: 1600
      DISPLAY_HEIGHT: 960
      VNC_PASSWD: $FILEBOT_VNC_PASSWD
    labels:
      traefik.enable: "true"
      traefik.backend: filebot
      traefik.protocol: http
      traefik.port: 5800
      traefik.frontend.rule: Host:filebot.$DOMAINNAME
      traefik.frontend.headers.SSLHost: filebot.$DOMAINNAME
      traefik.docker.network: traefik_proxy
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex


      # VSCode - VSCode Editing 
  vscode:
    image: codercom/code-server:latest
    container_name: vscode
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "$VSCODE_PORT:8080"
    volumes:
      - $USERDIR/docker/vscode/project:/home/coder/project
      - $USERDIR/docker/vscode/local:/home/coder/.local/share/code-server
    environment:
      PASSWORD: $VSCODE_PASSWORD    
# Run as root first, create the directories, then change permissions to user:docker and 775. Disable run as root below.
    user: "0"
    labels:
      traefik.enable: "true"
      traefik.backend: vscode
      traefik.protocol: http
      traefik.port: 8080
      traefik.frontend.rule: "Host:vscode.$DOMAINNAME"
      traefik.frontend.headers.SSLHost: vscode.$DOMAINNAME
      traefik.docker.network: traefik_proxy
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex

  # Plex - Media Server
  plexms:
    image: plexinc/pms-docker:public
    container_name: plexms
    restart: unless-stopped
    networks:
      - traefik_proxy
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp" #conflict with xTeVe
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "33400:33400"
    volumes:
      - $USERDIR/docker/plexms:/config
      - $USERDIR/Downloads:/Downloads
      - ${USERDIR}/transcode:/transcode # Offload transcoding to RAM if you have enough RAM
      - ${MEDIADIR}/torrentCompleted/tvshow:/downloads
      - ${MEDIADIR}/torrent/watch:/watch
      - ${MEDIADIR}/tvShow:/tv
      - ${MEDIADIR}/anime:/anime
      - ${MEDIADIR}/movie:/movie
    environment:
      TZ: $TZ
      HOSTNAME: "plex"
      PLEX_UID: $PUID
      PLEX_GID: $PGID
      ADVERTISE_IP: http://$SERVER_IP:$PLEX_PORT/
    labels:
      traefik.enable: "true"
      traefik.backend: plexms
      traefik.port: 32400
      traefik.frontend.rule: Host:stream.$DOMAINNAME
      traefik.frontend.headers.SSLHost: stream.$DOMAINNAME
      traefik.docker.network: traefik_proxy
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"

  nextcloud:
    restart: always
    image:  nextcloud
    container_name: "nextcloud"
    volumes:
      - ${USERDIR}/docker/nextmedia:/var/www/html
      - ${USERDIR}/docker/shared:/shared
      - ${MEDIADIR}/comic:/var/www/html/comic:ro
      - ${MEDIADIR}/game:/var/www/html/game:ro
      - ${MEDIADIR}/torrent/complete:/var/www/html/torrent:ro
    environment: 
      - "NEXTCLOUD_TRUSTED_DOMAINS=cloud.${DOMAINNAME}"
    networks:
      - traefik_proxy
    ports: 
      - "81:80"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nextcloud"
      - "traefik.frontend.rule=Host:cloud.${DOMAINNAME}"
      - "traefik.frontend.headers.SSLHost=cloud.${DOMAINNAME}"
      - "traefik.port=80"
      - "traefik.frontend.headers.frameDeny=true"


  traefik:
    hostname: traefik
    image: traefik:v1.7.16
    command: --api --docker
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - traefik_proxy
    dns:
#      - $PIHOLE_IP
      - 1.1.1.1
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
      traefik.enable: "true"
      traefik.backend: traefik
      traefik.port: 8080
      traefik.frontend.rule: Host:traefik.$DOMAINNAME
      traefik.frontend.headers.SSLHost: traefik.$DOMAINNAME
      traefik.docker.network: traefik_proxy
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/docker/traefik:/etc/traefik
      - ${USERDIR}/docker/shared:/shared
      
  # Glances - System Information
  glances:
    image: nicolargo/glances
    hostname: glances
    container_name: glances
    restart: unless-stopped
    privileged: true
    networks:
      - traefik_proxy
    ports:
      - "${GLANCES_PORT}:61208"
    pid: host
    volumes:
      # - ${USERDIR}/docker/glances/glances.conf:/glances/conf/glances.conf # Use this if you want to add a glances.conf file
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
#      GLANCES_OPT: "-C /glances/conf/glances.conf --quiet --export influxdb"
      GLANCES_OPT: "-w"
    labels:
      traefik.enable: "true"
      traefik.backend: glances
      traefik.protocol: http
      traefik.port: 61208
      traefik.frontend.rule: Host:stats.${DOMAINNAME}
      traefik.frontend.headers.SSLHost: stats.${DOMAINNAME}
      traefik.docker.network: traefik_proxy
      traefik.frontend.headers.customResponseHeaders: X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      traefik.frontend.headers.frameDeny: "true"

  # StatPing - Status Page & Monitoring Server
  statping:
    image: hunterlong/statping
    container_name: statping
    hostname: statping
    restart: unless-stopped
    networks:
      - traefik_proxy
      - default
    ports:
      - "${STATPING_PORT}:8080"
    volumes:
      - ${USERDIR}/docker/statping:/app
    environment:
      VIRTUAL_HOST: localhost
      VIRTUAL_PORT: 8080
      # DB_CONN: postgres
      # DB_HOST: postgres
      # DB_USER: ${STATPING_DB_USER}
      # DB_PASS: ${STATPING_DB_PASS}
      # DB_DATABASE: ${STATPING_DB}
      IS_DOCKER: "true"
      DISABLE_LOGS: "false"
      NAME: StatPing
      DESCRIPTION: Monitor web services
    labels:
      traefik.enable: "true"
      traefik.backend: statping
      traefik.port: 8080
      traefik.frontend.rule: "Host:ping.${DOMAINNAME}"
      traefik.frontend.headers.SSLHost: ping.${DOMAINNAME}
      traefik.docker.network: traefik_proxy 


networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge


      